generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id          Int                     @id @default(autoincrement())
  createdAt   DateTime?               @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime?               @map("updated_at") @db.Timestamptz(6)
  deletedAt   DateTime?               @map("deleted_at") @db.Timestamptz(6)
  url         String                  @unique(map: "unique_url") @db.VarChar
  title       String                  @db.VarChar
  source      String                  @map("article_source") @db.VarChar
  restaurants ArticlesToRestaurants[] @relation("articlestorestaurantsToarticles")

  @@map("articles")
}

model Award {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime?  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime?  @map("updated_at") @db.Timestamptz(6)
  deletedAt    DateTime?  @map("deleted_at") @db.Timestamptz(6)
  restaurantId Int        @map("restaurant_id")
  source       String     @map("award_source") @db.VarChar
  type         String     @map("award_type") @db.VarChar
  year         Int
  url          String     @db.VarChar
  chef         String?    @db.VarChar
  restaurants  Restaurant @relation(fields: [restaurantId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("awards")
}

model City {
  city        String       @id @unique(map: "unique_city") @db.VarChar
  state       String?      @db.VarChar
  country     String?      @db.VarChar
  restaurants Restaurant[]

  @@map("cities")
}

model Restaurant {
  id        Int                     @id @default(autoincrement())
  createdAt DateTime?               @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime?               @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime?               @map("deleted_at") @db.Timestamptz(6)
  name      String                  @db.VarChar
  city      String                  @db.VarChar
  gPlaceId  String?                 @map("g_place_id") @db.VarChar
  cities    City                    @relation(fields: [city], references: [city], onDelete: NoAction, onUpdate: NoAction)
  articles  ArticlesToRestaurants[] @relation("articlestorestaurantsTorestaurants")
  awards    Award[]

  @@map("restaurants")
}

model ArticlesToRestaurants {
  created_at   DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?  @db.Timestamptz(6)
  deleted_at   DateTime?  @db.Timestamptz(6)
  articleId    Int        @map("article_id")
  restaurantId Int        @map("restaurant_id")
  id           Int        @id @default(dbgenerated("nextval('_articlestorestaurants_id_seq'::regclass)"))
  articles     Article    @relation("articlestorestaurantsToarticles", fields: [articleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "articles_restaurants_article_id_fkey")
  restaurants  Restaurant @relation("articlestorestaurantsTorestaurants", fields: [restaurantId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "articles_restaurants_restaurant_id_fkey")

  @@map("_articlestorestaurants")
}
